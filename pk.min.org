* package view (module outlines)                                :pk:min:
:PROPERTIES:
:TS: <2013-01-11 09:40AM>
:ID: 7vwjky90kzf0
:END:
*** MODULE =mn= : minneron object model                           :ed:ifc:
:PROPERTIES:
:TS: <2013-01-11 05:09AM>
:ID: fr5fryb1jzf0
:END:
#+begin_src pascal :tangle ".gen/mn.pas" :noweb tangle
  {$mode delphi}{$i xpc.inc}{$H+}
  unit mn;
  interface uses xpc, fs, stri, num, cw, ui, kvm, kbd, cli, tiles,
    vorunati, sysutils, mnml, mnbuf;

  var cmd_rnd : TCmdId;

    <<type:TEditor>>
    <<type:span>>
  implementation
  
  procedure EmitRandomChars;
    var x, y : byte;
    begin
      x := kvm.maxX div 2 + 1
           + round((random-0.5) * (random( kvm.Width )));
      { random * random will give a strong bias to top of screen }
      y := round(random * random * random( kvm.Width ));
      kvm.Fg( random( 16 )); kvm.Bg( 0 );
      kvm.GotoXY( x, y );
      write( chr( random( 128 - 32 ) + 32 ));
      if kbd.KeyPressed then
         begin
          kbd.ReadKey;
          ShowCursor;
         end
      else mnml.launch(cmd_rnd);
    end;

    <<@imp:ed>>
    <<@imp:span>>

  begin
    mnml.define(cmd_rnd, @EmitRandomChars, 'rnd');
  end.
#+end_src

