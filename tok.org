#+title: tok : a simple token-centric editor

* DONE An app with an editor.

#+begin_src pascal :tangle ".gen/tok.pas" :comments both :padline yes :noweb tangle

  {$mode delphi}
  program tok;
  uses uapp, mned, ukm;

  type TTokEd = class (uapp.TCustomApp)
    ed : mned.TEditor;
    function init : boolean; override;
    procedure step; override;
    procedure keys(km : ukm.TKeyMap); override;
    procedure done; override;
  end;

  <<implementation>>

  begin
    uapp.run(TTokEd.Create);
  end.

#+end_src


* init

#+name: implementation
#+begin_src pascal

  function TTokEd.init : boolean;
    begin
      ed := TEditor.Create(self);
      result := true
    end;

#+end_src

* keys

#+name: implementation
#+begin_src pascal
  
  procedure TTokEd.keys(km : ukm.TKeyMap);
    begin
      ed.AddDefaultKeys(km);
      km.cmd[ ^C ] := self.quit;
    end;
  
#+end_src


* step

#+name: implementation
#+begin_src pascal
  
  procedure TTokEd.step;
    begin
      ed.redraw;
    end;
  
#+end_src

* done

#+name: implementation
#+begin_src pascal

  procedure TTokEd.done;
    begin
    end;

#+end_src

* end
